{"version":3,"sources":["LetterButton.js","Container.js","MainContainer.js","SelectionBlock.js","SelectionContainer.js","App.js","index.js"],"names":["LetterButton","color","letter","onClick","selected","blocked","style","border","textAlign","backgroundColor","cursor","fontWeight","borderRadius","display","padding","width","heigth","Container","letters","selectedLetters","onLetterClick","blockedLetters","map","index","some","MainContainer","lettersConfig","emitChoosePreset","setSelectedScreen","selectedScreen","useState","lettersArray","setLettersArray","setSelectedLetters","wordDisplayed","setWordDisplayed","wordHistory","setWordHistory","JSON","parse","localStorage","getItem","presets","selectedPreset","setSelectedPreset","choosePreset","preset","transformed","e","window","location","reload","useEffect","setItem","height","margin","src","alt","float","clear","name","value","onChange","target","fontSize","length","join","overflowY","marginRight","console","log","cloneWordDisplayed","cloneLettersArray","selectedLetter","maxHeight","reverse","word","SelectionBlock","getAllSelectedLetters","initialConfig","getSelectedLettersByColor","desSelectLetterByColor","getSelectedAllOrNoneLettersByColor","uniqueId","calculateH","setCalculateH","emitAllLetters","allLettersArray","allLetters","flat","emitSelectedLettersByColor","filter","returnedFunction","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","addEventListener","marginBottom","id","justifyContent","alignItems","marginTop","visibility","categoryName","selectByIndex","flexDirection","subCategories","subCategoryletters","index2","subCategoryLetters","every","letter2","arraySelectedLetters","Set","Array","from","selectByIndexAndSubCategory","marginLeft","subCategoryName","forwardRef","props","ref","getTransformToMainContainerLetterArrayProps","useImperativeHandle","choosePresetExternal","setPresets","presetName","setPresetName","reset","Date","now","setUniqueId","defaultConfigs","gridTemplateColumns","gridGap","initialConfigs","setInitialConfigs","initialLettersByColor","allLettersByColorAndRow","initialConfigObj","obj","innerObj","push","letterConfig","arrayLetters","setLetters","allSelectedLetters","setAllSelectedLetters","allSelectedLettersByColor","setSelectedLettersByColor","cloneAllSelectedLettersByColor","transformToMainContainerLetterArrayProps","indexOf","splice","k","i","presetSaved","defaultConfigsClone","defaultConfigArray","defaultConfigObj","copyDefaultConfigObj","presetSavedLetter","includes","stringify","type","error","alert","removeItem","newPreset","overflowX","allOrNone","cloneAllSelectedLetters","App","setLettersConfig","childRef","useRef","presset","current","SelectionContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9e78b8e9.chunk.js","sourcesContent":["export default function LetterButton({color,letter,onClick,selected,blocked,style={}}) {\n \n    style = {\n     border:'1px solid black',\n     textAlign:'center',\n     backgroundColor:blocked?'grey':`rgba(${color},${selected?'1':'0.4'})`,\n     cursor: blocked?'no-drop':'pointer',\n     fontWeight:600,\n     borderRadius:\"6px\",\n     display: 'inline-block',\n     padding:'5px 0px',\n     width:'40px',\n     heigth:'27px',\n    \n     ...style\n   }\n   return <div><div style={style} onClick={()=>blocked?null:onClick(letter)}>{letter}</div></div>\n  }\n   \n  \n  ","import LetterButton from \"./LetterButton\";\nexport default function Container({letters,selectedLetters,color,onLetterClick,blockedLetters,style}) {\n \n \n return <div style={style?{...style}:{}}>{letters.map((letter,index)=>{return  <LetterButton\n       key={index}\n       color={color}\n       letter={letter}\n       selected={selectedLetters.some(selectedLetters=>{return selectedLetters===letter})}\n       blocked={blockedLetters.some(blockedLetters=>{return blockedLetters===letter})}\n       onClick={onLetterClick}\n     ></LetterButton> })}</div>\n}\n \n\n","import Container from \"./Container\";\nimport {useState,useEffect} from 'react'\nexport default function MainContainer({lettersConfig,style,emitChoosePreset,setSelectedScreen, selectedScreen}) {\n let [lettersArray,setLettersArray] = useState([...lettersConfig])\n let [selectedLetters,setSelectedLetters] = useState([])\n let [wordDisplayed,setWordDisplayed] = useState([])\n let [wordHistory,setWordHistory]= useState([])\n  let [presets ,setPresets]=useState(!JSON.parse(localStorage.getItem('presets'))?[]:JSON.parse(localStorage.getItem('presets')))\nlet [selectedPreset ,setSelectedPreset]=useState(localStorage.getItem('selectedPreset'));\n let onLetterClick= (letter,index)=>{\n \n  \n \n  \n   console.log(letter,index)\n   let cloneWordDisplayed= [...wordDisplayed]\n \n \n   let cloneLettersArray = [...lettersArray]\n \nif(lettersArray[index].selectedLetters.some(selectedLetter=>selectedLetter===letter)){\n \n      cloneLettersArray[index].selectedLetters = []\n      cloneWordDisplayed[index]=''\n   }else{\ncloneLettersArray[index].selectedLetters = [letter]\n cloneWordDisplayed[index]=letter\n   }\n   setSelectedLetters(cloneLettersArray)\nsetWordHistory([...wordHistory,cloneWordDisplayed.join('')])\n   setWordDisplayed(cloneWordDisplayed)\n  \n \n }\n \n let choosePreset=(preset)=>{\n   setSelectedPreset(preset)\n   emitChoosePreset(preset)\n  try{\n     let lettersArray= JSON.parse(localStorage.getItem(preset))\n  \nsetLettersArray(lettersArray.transformed)\n  }\n  catch(e){\n \n   window.location.reload();\n  }\n \n  \n \n  \n \n  \n }\n \n useEffect(() => {\n   if(localStorage.getItem('selectedPreset')===null){\n     localStorage.setItem('selectedPreset','Default')\n     choosePreset('Default')\n   }else{\nchoosePreset(localStorage.getItem('selectedPreset'))\n   }\n \n \n }, []);\n return <div style={style? style:{}}>\n  <div style={{ width:'100%', backgroundColor:'#cdf1fc',height:'90px'}}>\n <div style={{margin:'auto', width:'70%'}} >\n   <br></br>\n   <div style={{display:'inline-block'}}>\n     <img src=\"https://omarbarbosahmh.github.io/blendingboardv3/assets/logo.png\" alt=\"logo\" width='280px'></img>\n     </div>\n   <div style={{float:'right',display:'inline-block',cursor:\"pointer\"}}  onClick={()=>setSelectedScreen(\"SelectionContainer\")}>\n     <img src=\"https://omarbarbosahmh.github.io/blendingboard/assets/burguer.png\" alt=\"burguer icon\" width=\"50px\"></img>\n     </div>\n    \n \n     <div style={{clear:'both'}}>\n       </div>\n       </div></div>\n   <select name=\"preset\" value={selectedPreset} onChange={(e)=>choosePreset(e.target.value)}>\n             <option value={'Default'}>Default</option>\n             {presets.map(preset=><option value={preset}>{preset}</option>)}\n            </select>\n   <div style={{textAlign:'center',fontWeight:'600',fontSize:\"80px\"}}>\n    \n     {wordDisplayed.length === 0 || wordDisplayed.join() ===''  ? 'Start Typing...':wordDisplayed.join('')}\n   </div>\n   <div style={{margin:\"20px\",height:\"78vh\", overflowY:\"auto\"}}>\n \n<div style={{ width:'90%', float:\"left\",textAlign:'center'}}>\n<div style={{display: 'inline-block',backgroundColor:\"white\",padding:\"24px\"}}>\n    {lettersArray.map((letters,index)=>{return <Container\n       key = {index}\n       style = {letters.style?{...letters.style,marginRight:'24px'}:{}}\n       letters = {letters.letters}\n       selectedLetters = {letters.selectedLetters}\n       color = {letters.color}\n       onLetterClick={(letter)=>onLetterClick(letter,index)}\n       blockedLetters={letters.blockedLetters}\n       >\n     </Container>})\n    \n     }\n      <div style={{clear:'both'}}></div>\n     </div>\n   \n</div>\n{[...wordHistory].length!=0 && <div style={{   float:\"left\",display: 'inline-block',backgroundColor:\"white\",padding:\"24px\", overflowY:\"scroll\",maxHeight:\"70vh\"}}>\n   {[...wordHistory].reverse().map(word=>{return <p style={{fontWeight:'600', fontSize:'30px'}}>{word}</p>})}\n</div>}\n \n<div style={{clear:'both'}}></div>\n   </div>\n  \n    \n   \n </div>\n}\n \n\n","import LetterButton from \"./LetterButton\";\nimport {useState, useEffect} from 'react'\nimport Container from \"./Container\";\n \nexport default function SelectionBlock({getAllSelectedLetters,initialConfig,getSelectedLettersByColor,getSelectedAllOrNoneLettersByColor,desSelectLetterByColor,uniqueId}) {\n \n let [lettersArray,setLettersArray] = useState(\ninitialConfig)\n let [selectedLetters,setSelectedLetters] = useState([])\n let [calculateH,setCalculateH] = useState(false)\n \n let emitAllLetters=(allLettersArray)=>{\n   //console.log(lettersArray)\nlet allLetters = [...allLettersArray].map(({selectedLetters})=>{\n//console.log(selectedLetters)\nreturn selectedLetters\n})\nallLetters= allLetters.flat(1)\n//console.log(allLetters)\n   getAllSelectedLetters(allLetters)\n}\n \nlet emitSelectedLettersByColor=(color,selectedLetters,allLetters)=>{\n   getSelectedLettersByColor(color,selectedLetters,allLetters)\n}\n \n let onLetterClick= (letter,index,color,selected)=>{\n   //console.log(letter,index)\n   let cloneLettersArray = [...lettersArray]\n     if(lettersArray[index].selectedLetters.some(selectedLetter=>selectedLetter===letter)){\n           cloneLettersArray[index].selectedLetters = cloneLettersArray[index].selectedLetters.filter(selectedLetter=>selectedLetter!==letter)      \n         }else{\n     cloneLettersArray[index].selectedLetters = [...cloneLettersArray[index].selectedLetters,letter]\n         }\n        \n         setSelectedLetters(cloneLettersArray)\n         emitAllLetters(cloneLettersArray)\n         if(!selected){\n           emitSelectedLettersByColor(color,cloneLettersArray[index].selectedLetters)\n         }else{\ndesSelectLetterByColor(color,letter)\n         }\n       \n        \n \n }\n let selectAll= ()=>{\n      let cloneLettersArray = [...lettersArray]\n      cloneLettersArray.map(letterArrayObj=>{\n     letterArrayObj.selectedLetters = [...letterArrayObj.letters]\n  \n   \n \nreturn letterArrayObj\n      })\n        setSelectedLetters(cloneLettersArray)\n        emitAllLetters(cloneLettersArray)\n          getSelectedAllOrNoneLettersByColor('all')\n }\n \n   let selectNone= ()=>{\n      let cloneLettersArray = [...lettersArray]\n      cloneLettersArray.map(letterArrayObj=>{\nletterArrayObj.selectedLetters = []\n \nreturn letterArrayObj\n      })\n        setSelectedLetters(cloneLettersArray)\n        emitAllLetters(cloneLettersArray)\n        getSelectedAllOrNoneLettersByColor('none')\n }\n \n let selectByIndex= (index)=>{\n \n        let cloneLettersArray = [...lettersArray]\n     \n   if( cloneLettersArray.[index].selectedLetters.length === [...cloneLettersArray.[index].letters].length){\ncloneLettersArray.[index].selectedLetters =[]\n   }else{\n     cloneLettersArray.[index].selectedLetters = [...cloneLettersArray.[index].letters]\n   }\n \n    console.log(index)\n    console.log(cloneLettersArray.[index])\n   \n \n        setSelectedLetters(cloneLettersArray)\n        emitAllLetters(cloneLettersArray)\n        //alert(JSON.stringify( cloneLettersArray[index].selectedLetters))\n       emitSelectedLettersByColor(cloneLettersArray[index].color,cloneLettersArray[index].selectedLetters,cloneLettersArray[index].letters)\n          //getSelectedAllOrNoneLettersByColor('all')\n }\n \n let selectByIndexAndSubCategory= (index,subCategoryLetters)=>{\n \n        let cloneLettersArray = [...lettersArray]\n     \n if( subCategoryLetters.every(letter=>cloneLettersArray.[index].selectedLetters.some(letter2=>letter2===letter))){\ncloneLettersArray.[index].selectedLetters =[...cloneLettersArray.[index].selectedLetters.filter(letter=>!subCategoryLetters.some(letter2=>letter2===letter))]\n   }else{\n     let arraySelectedLetters= [...cloneLettersArray.[index].selectedLetters,...subCategoryLetters]\n      arraySelectedLetters= new Set(arraySelectedLetters)\n  arraySelectedLetters=Array.from(arraySelectedLetters)\n     cloneLettersArray.[index].selectedLetters = [...arraySelectedLetters]\n   }\n \n    console.log(index)\n    console.log(cloneLettersArray.[index])\n   \n \n        setSelectedLetters(cloneLettersArray)\n        emitAllLetters(cloneLettersArray)\n        //alert(JSON.stringify( cloneLettersArray[index].selectedLetters))\n       emitSelectedLettersByColor(cloneLettersArray[index].color,cloneLettersArray[index].selectedLetters,cloneLettersArray[index].letters)\n          //getSelectedAllOrNoneLettersByColor('all')\n }\n useEffect(() => {\n setLettersArray(initialConfig);\n}, [initialConfig]);\nuseEffect(() => {\n  function debounce(func, wait, immediate) {\n var timeout;\n \n return function executedFunction() {\n   var context = this;\n   var args = arguments;\n    \n   var later = function() {\n     timeout = null;\n     if (!immediate) func.apply(context, args);\n   };\n \n   var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n \n   timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n };\n};\n \nvar returnedFunction = debounce(function() {\n   setCalculateH(!calculateH)\n}, 500);\n \nwindow.addEventListener('resize', returnedFunction)})\n return <div key={uniqueId} style={{marginBottom:\"24px\"}}>\n   <div id={'container-'+uniqueId} style={{margin:\"20px\"}}>\n \n \n{false &&  <div style={{border :'solid blue 2px',marginTop:(document.getElementById('container-'+uniqueId)?.clientHeight/2)-20 + 'px', width:'9%',float:\"left\"}}>\n   <LetterButton letter=\"None\" onClick={selectNone} style={{float:'right'}}></LetterButton>\n  <LetterButton letter=\"All\" onClick={selectAll} style={{float:'right'}} ></LetterButton>\n   <div style={{clear:\"both\"}}></div >\n   </div>\n}\n<div style={{ width:'100%', float:\"left\",textAlign:'center',display: 'flex',\n justifyContent: 'center',\n alignItems: 'center'}}>\n \n<div>\n     {lettersArray.map((letters,index)=>{return <div style={{  textAlign:\"left\",width:'100%',marginTop:index===0?\"0px\":\"24px\", visibility:letters.categoryName===''?'hidden':\"visible\"}}><div onClick={()=>selectByIndex(index)} style={{cursor:\"pointer\",borderRadius:\"5px\",padding:\"10px\", textAlign:\"center\",backgroundColor:`rgba(${letters.color},1)`,fontWeight:\"600\"}}>{letters.categoryName} </div>\n       <div style={{ borderRadius:\"5px\",backgroundColor:'white',display:\"flex\",flexDirection:\"column\",justifyContent:\"center\"}}>\n     \n  \n     \n    \n   { letters.subCategories.length ===0 && <Container\n       key = {index}\n       style = {letters.style?{...letters.style, padding:\"10px\"}:{}}\n       letters = {letters.letters}\n       selectedLetters = {letters.selectedLetters}\n       color = {letters.color}\n       onLetterClick={(letter)=>onLetterClick(letter,index,letters.color,letters.selectedLetters.some(selectedLetter=>selectedLetter===letter))}\n       blockedLetters={letters.blockedLetters}\n       >\n     </Container>}\n    \n       {letters.subCategories.map((subCategoryletters,index2)=>{return <div style={{float:'left'}}>\n   \n    \n    {index2!=0 && <div style={{height:'5px', backgroundColor:'#e1f7fd'}}></div>}\n     <br />\n      <span onClick={()=>selectByIndexAndSubCategory(index,subCategoryletters.letters)} style={{cursor:\"pointer\",fontWeight:\"600\",marginLeft:\"20px\"}}>{subCategoryletters.subCategoryName} </span>\n      <br />\n    \n      \n      <Container\n       key = {index2}\n       style = {letters.style?{...letters.style, padding:\"20px\"}:{}}\n       letters = {subCategoryletters.letters}\n       selectedLetters = {letters.selectedLetters}\n       color = {letters.color}\n       onLetterClick={(letter)=>onLetterClick(letter,index,letters.color,letters.selectedLetters.some(selectedLetter=>selectedLetter===letter))}\n       blockedLetters={letters.blockedLetters}\n       >\n     </Container>\n    \n   \n    \n     </div>})}\n    \n     </div></div>})\n     }\n \n \n    \n    \n      <div style={{clear:'both'}}></div>\n     </div>\n   \n</div>\n \n<div style={{clear:'both'}}></div>\n   </div>\n  \n    \n   \n </div>\n \n}\n\n","import {useState, useEffect,useImperativeHandle,forwardRef} from 'react'\nimport SelectionBlock from \"./SelectionBlock\";\nimport \"./App.css\";\nexport default forwardRef((props,ref)=> {\nlet {getTransformToMainContainerLetterArrayProps,style,setSelectedScreen, selectedScreen}= props\nuseImperativeHandle(ref, () => ({\n \n   choosePresetExternal(preset) {\n     console.log(preset)\n     choosePreset(preset);\n   }\n \n }));\nlet [presets ,setPresets]=useState(!JSON.parse(localStorage.getItem('presets'))?[]:JSON.parse(localStorage.getItem('presets')))\nlet [selectedPreset ,setSelectedPreset]=useState(localStorage.getItem('selectedPreset')?localStorage.getItem('selectedPreset'):'Default');\n let [presetName ,setPresetName]=useState()\n   let [reset ,setReset]=useState(false)\n   let [uniqueId, setUniqueId] = useState(Date.now())\n    let defaultConfigs= [[\n     {categoryName:\"Consonants\",subCategories:[],letters:['','b','c','d','f','g','h','i','j','k','l','m','n','p','r','s','t','v','w','y','z'],color:'153, 195, 252',selectedLetters:['','b','c','d','f','g','h','i','j','k','l','m','n','p','r','s','t','v','w','y','z'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,40px)',gridGap:'12px',margin:\"12px auto\"}},\n     {categoryName:\"Blends\",subCategories:[{subCategoryName:\"Blends with l\",letters:['bl','cl','fl','gl','pl','sl','spl']},{subCategoryName:\"Blends with r\",letters:['br','cr','dr','fr','gr','pr','scr','shr','spr','str','thr','tr']},{subCategoryName:\"Blends with s\",letters:['sc','sk','sl','sm','sn','sp','spl','spr','squ','st','str','sw']}],letters:['bl','cl','fl','gl','pl','sl','spl','br','cr','dr','fr','gr','pr','scr','shr','spr','str','thr','tr','sc','sk','sl','sm','sn','sp','spl','spr','squ','st','str','sw'],color:'153, 195, 252',selectedLetters:['e','i','o','u','y'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,40px)',gridGap:'12px',margin:\"12px auto\"}},\n     {categoryName:\"Consonant DIagraphs\", subCategories:[],letters:['ch','gh','gn','kn','ph','qu','sh','sh','th','wh','wr'],color:'153, 195, 252',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,40px)',gridGap:'12px',margin:\"12px auto\"}},\n  {categoryName:\"Consonant Tiagraphs\", subCategories:[],letters:['scr','shr','spl','spr'],color:'153, 195, 252',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,40px)',gridGap:'12px',margin:\"12px auto\"}},\n    \n    ],[\n     {categoryName:\"Short Vowels\",subCategories:[],letters:['','b','c','d','f','g','h','i','j','k','l','m','n','p','r','s','t','v','w','y','z'],color:'175, 236, 68',selectedLetters:['','b','c','d','f','g','h','i','j','k','l','m','n','p','r','s','t','v','w','y','z'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,40px)',gridGap:'12px',margin:\"12px auto\"}},\n        {categoryName:\"Long Vowels\", subCategories:[{subCategoryName:\"Long a\", letters:['a','ai','aigh','ay','ea','ei','eigh','ey']},{subCategoryName:\"Long e\", letters:['e','ea','ee','ey','ie','y']},{subCategoryName:\"Long i\", letters:['i','ie','igh','y']},{subCategoryName:\"Long o\", letters:['o','oa','oe','ough','ow']},{subCategoryName:\"Long u\", letters:['eau','eu','ew','o','oe','oo','ough','u','u','ue','ui']}],letters:['a','ai','aigh','ay','ea','ei','eigh','ey','e','ea','ee','ey','ie','y','i','ie','igh','y','o','oa','oe','ough','ow','eau','eu','ew','o','oe','oo','ough','u','u','ue','ui'],color:'175, 236, 68',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,40px)',gridGap:'12px',margin:\"12px auto\"}},\n     {categoryName:\"r-Controlled Vowels\", subCategories:[{subCategoryName:\"/ar/\", letters:['ar']},{subCategoryName:\"/or/\", letters:['oar','oor','or','ore','our']},{subCategoryName:\"/ur/\", letters:['ear','er','ir','ur']},{subCategoryName:\"/ar/\", letters:['air','are','ear']},{subCategoryName:\"/ir/\", letters:['ear','eer']}],letters:['ar','oar','oor','or','ore','our','ear','er','ir','ur','ear','er','ir','ur','air','are','ear','ear','eer'],color:'175, 236, 68',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,40px)',gridGap:'12px',margin:\"12px auto\"}},\n    {categoryName:\"Vowel Teams\", subCategories:[{subCategoryName:\"oo\", letters:['oo']},{subCategoryName:\"oo\", letters:['ew','oe','oo','ough','ue','ui']},{subCategoryName:\"o\", letters:['au','augh','aw','ough']},{subCategoryName:\"Long a\", letters:['ai','aigh','ay','ea','ei','eigh','ey']},{subCategoryName:\"Long e\", letters:['ea','ee','ey','ie']},{subCategoryName:\"Long i\", letters:['ie','igh']},{subCategoryName:\"Long o\", letters:['oa','oe','ough','ow']},{subCategoryName:\"Long u\", letters:['eau','eu','ew','oe','oo','ough','ue','ui']}],letters:['oo','ew','oe','oo','ough','ue','ui','au','augh','aw','ough','ai','aigh','ay','ea','ei','eigh','ey','ea','ee','ey','ie','ie','igh','oa','oe','ough','ow','eau','eu','ew','oe','oo','ough','ue','ui'],color:'175, 236, 68',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,40px)',gridGap:'12px',margin:\"12px auto\"}},\n {categoryName:\"Diphthongs\", subCategories:[{subCategoryName:\"/ou/\", letters:['ou','ow']},{subCategoryName:\"/oi/\", letters:['oi','oy']}],letters:['ou','ow','oi','oy'],color:'175, 236, 68',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,40px)',gridGap:'12px',margin:\"12px auto\"}},\n    \n      \n   ],[\n   \n     {categoryName:\"Consonants\",subCategories:[],letters:['b','d','g','k'],color:'219, 169, 250',selectedLetters:['b','d','g','k'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,40px)',gridGap:'12px',margin:\"12px auto\"}},\n     {categoryName:\"Double Consonants\", subCategories:[],letters:['bb','dd','ff','gg','ll','mm','nn','pp','rr','ss','tt','zz'],color:'219, 169, 250',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,40px)',gridGap:'12px',margin:\"12px auto\"}},\n     {categoryName:\"Blends with s\", subCategories:[],letters:['sp','st'],color:'219, 169, 250',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,40px)',gridGap:'12px',margin:\"12px auto\"}},\n      {categoryName:\"Other Blends\", subCategories:[],letters:['mp','nd','ng','nk','nt','nx'],color:'219, 169, 250',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,40px)',gridGap:'12px',margin:\"12px auto\"}},\n     {categoryName:\"Consonant Diagraphs\", subCategories:[],letters:['ch','ck','gh','gn','mb','ph','sh','th','ve'],color:'219, 169, 250',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,40px)',gridGap:'12px',margin:\"12px auto\"}},\n       {categoryName:\"Consonant Tiagrpahs\", subCategories:[],letters:['dge','tch'],color:'219, 169, 250',selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(4,40px)',gridGap:'12px',margin:\"12px auto\"}},\n    \n   ],[\n       {categoryName:\"Endings\",subCategories:[],letters:['e','ed','es','ing','s'],color:'52, 210, 189',selectedLetters:['e','ed','es','ing','s'],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(1,40px)',gridGap:'12px',margin:\"12px auto\"}}\n \n   ]]\n  \n   let [initialConfigs,setInitialConfigs] =useState(defaultConfigs)\n \n let initialLettersByColor ={}\n let allLettersByColorAndRow = []\nlet allLetters = [...initialConfigs].map((initialConfigObj,index)=>{\n let obj= {}\n initialConfigObj.map(innerObj=>{\n  obj[innerObj.color]= {letters:innerObj.letters}\n \n})\nallLettersByColorAndRow.push(obj)\ninitialConfigObj = initialConfigObj.map(({selectedLetters})=>selectedLetters).flat()\n \n \nreturn initialConfigObj\n})\n//allLetters= allLetters.flat()\nlet allLettersConfigFlat= initialConfigs.flat(1)\nallLettersConfigFlat.map(letterConfig=>{\n let arraySelectedLetters =   [...initialLettersByColor[letterConfig.color] && initialLettersByColor[letterConfig.color].selectedLetters?initialLettersByColor[letterConfig.color].selectedLetters:[] ,...letterConfig.selectedLetters]\n let setSelectedLetters= new Set(arraySelectedLetters)\n  arraySelectedLetters=Array.from(setSelectedLetters)\n  let arrayLetters =   [...initialLettersByColor[letterConfig.color] && initialLettersByColor[letterConfig.color].letters?initialLettersByColor[letterConfig.color].letters:[] ,...letterConfig.letters]\n let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  initialLettersByColor[letterConfig.color] = {selectedLetters:arraySelectedLetters}\n \n})\n \n \n let [allSelectedLetters,setAllSelectedLetters]=useState([...allLetters])\n let [allSelectedLettersByColor,setSelectedLettersByColor]=useState(initialLettersByColor)\n \n \n let getAllSelectedLetters=(selectedLetters,index)=>{\n   console.log(selectedLetters,index)\n    let cloneAllSelectedLetters = [...allSelectedLetters]\n    cloneAllSelectedLetters[index] = selectedLetters\n    \n \nsetAllSelectedLetters(cloneAllSelectedLetters)\n \n }\n \n let getSelectedLettersByColor = (color,selectedLetters,allLetters)=>{\n   console.log(color,selectedLetters)\n  let cloneAllSelectedLettersByColor ={...allSelectedLettersByColor}\n let arrayLetters=[...cloneAllSelectedLettersByColor[color].selectedLetters,...selectedLetters]\n \n \n if(selectedLetters.length===0 && allLetters){\n   arrayLetters= arrayLetters.filter(letter=>{\n     return !allLetters.some(letter2=>letter2===letter)\n   })\n   console.log(arrayLetters)\n  \n }\n  let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  cloneAllSelectedLettersByColor[color] = {selectedLetters:arrayLetters}\n  setSelectedLettersByColor(cloneAllSelectedLettersByColor)\n  transformToMainContainerLetterArrayProps(cloneAllSelectedLettersByColor)\n}\n \n \nlet desSelectLetterByColor=(color,letter)=>{\n //alert(color + letter)\nlet cloneAllSelectedLettersByColor ={...allSelectedLettersByColor}\nlet arrayLetters=  [...cloneAllSelectedLettersByColor[color].selectedLetters]\n \nconst index = arrayLetters.indexOf(letter);\nif (index > -1) {\n arrayLetters.splice(index, 1);\n}\n   let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  cloneAllSelectedLettersByColor[color] = {selectedLetters:arrayLetters}\nsetSelectedLettersByColor(cloneAllSelectedLettersByColor)\ntransformToMainContainerLetterArrayProps(cloneAllSelectedLettersByColor)\n}\nlet getSelectedAllOrNoneLettersByColor = (allOrNone,index)=>{\n  let cloneAllSelectedLettersByColor ={...allSelectedLettersByColor}\n \nlet arrayLetters =[]\n      for(var k in allSelectedLettersByColor) {\n        if(allOrNone==='none'){\n         // alert(k)\narrayLetters= [...cloneAllSelectedLettersByColor[k].selectedLetters].filter(letter=>{\n  return !allLettersByColorAndRow[index][k].letters.some(letter2=>letter2===letter)\n})\n        }else{\n        //  alert('index'+index+'color'+k)\n        //   alert(JSON.stringify(allLettersByColorAndRow[index]))\narrayLetters=  [...cloneAllSelectedLettersByColor[k].selectedLetters, ...allLettersByColorAndRow[index][k].letters]\n        }\n   let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  cloneAllSelectedLettersByColor[k] = {selectedLetters:arrayLetters}\n      }\n     \n  setSelectedLettersByColor(cloneAllSelectedLettersByColor)\n  transformToMainContainerLetterArrayProps(cloneAllSelectedLettersByColor)\n}\n \nlet transformToMainContainerLetterArrayProps = (allSelectedLettersByColor)=>{\n// alert(JSON.stringify(allSelectedLettersByColor))\n   let transformed=[]\n   for(var k in allSelectedLettersByColor) {\n \n       let lettersConfig = {letters:allSelectedLettersByColor[k].selectedLetters,color:k,selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'12px',margin:\"12px auto\",float:'left'}}\n       transformed.push(lettersConfig)\n}\n//console.log(transformed)\ngetTransformToMainContainerLetterArrayProps(transformed)\n \n}\n \nlet savePreset = ()=>{\n try {\n  \n \n     let transformed=[]\n   for(var k in allSelectedLettersByColor) {\n \n       let lettersConfig = {letters:allSelectedLettersByColor[k].selectedLetters,color:k,selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'12px',margin:\"12px auto\",float:'left'}}\n       transformed.push(lettersConfig)\n}\nlet presets=localStorage.getItem('presets');\npresets =!JSON.parse(presets)?[]:JSON.parse(presets)\npresets= Array.from(new Set([...presets,presetName]))\nlocalStorage.setItem('presets',JSON.stringify(presets) )\nlocalStorage.setItem('selectedPreset', presetName)\nsetSelectedPreset(presetName)\nsetPresets(presets)\nlocalStorage.setItem(presetName, JSON.stringify({preset:allSelectedLettersByColor,transformed}))\n } catch (error) {\n   alert(error)\n }\n}\n \nlet deletePreset = ()=>{\n  localStorage.removeItem(selectedPreset)\n localStorage.setItem('selectedPreset', '')\n setSelectedPreset(null)\n let newPreset= [...presets]\n newPreset.splice(newPreset.indexOf(selectedPreset),1)\n localStorage.setItem('presets',JSON.stringify(newPreset) )\n setPresets(newPreset)\n choosePreset('Default')\n}\n \nlet choosePreset = (presetName)=>{\n let initialConfigs = []\n setUniqueId(Date.now())\n localStorage.setItem('selectedPreset', presetName)\n setPresetName(presetName)\n setSelectedPreset(presetName);\n \n if(presetName==='Default' || !localStorage.getItem(presetName) ){\n   setInitialConfigs(defaultConfigs)\n   initialConfigs=[...defaultConfigs]\n   setAllSelectedLetters(defaultConfigs)\n }else{\n     let presetSaved= (JSON.parse(localStorage.getItem(presetName))).preset\nconsole.log(presetSaved)\n let defaultConfigsClone =[...defaultConfigs]\nfor (var i = 0; i < defaultConfigsClone.length; i++) {\n  let defaultConfigArray=     [...defaultConfigsClone[i]]\n defaultConfigArray= defaultConfigArray.map(defaultConfigObj=>{\n  let copyDefaultConfigObj = {...defaultConfigObj}\n  //alert(JSON.stringify(presetSaved[copyDefaultConfigObj.color]) + JSON.stringify(copyDefaultConfigObj.selectedLetters)   + JSON.stringify(presetSaved[copyDefaultConfigObj.color].selectedLetters.filter(presetSavedLetter=>copyDefaultConfigObj.selectedLetters.includes(presetSavedLetter))))\n  copyDefaultConfigObj.selectedLetters= [...presetSaved[copyDefaultConfigObj.color].selectedLetters.filter(presetSavedLetter=>copyDefaultConfigObj.letters.includes(presetSavedLetter))]\n  return copyDefaultConfigObj\n  })\n  defaultConfigsClone[i] =defaultConfigArray\n}\n console.log(defaultConfigsClone)\n initialConfigs=[...defaultConfigsClone]\nsetInitialConfigs([...defaultConfigsClone])\n \n }\n \n let initialLettersByColor ={}\n let allLettersByColorAndRow = []\nlet allLetters = [...initialConfigs].map((initialConfigObj,index)=>{\n let obj= {}\n initialConfigObj.map(innerObj=>{\n  obj[innerObj.color]= {letters:innerObj.letters}\n \n})\nallLettersByColorAndRow.push(obj)\ninitialConfigObj = initialConfigObj.map(({selectedLetters})=>selectedLetters).flat()\n \n \nreturn initialConfigObj\n})\n//allLetters= allLetters.flat()\nlet allLettersConfigFlat= initialConfigs.flat(1)\nallLettersConfigFlat.map(letterConfig=>{\n let arraySelectedLetters =   [...initialLettersByColor[letterConfig.color] && initialLettersByColor[letterConfig.color].selectedLetters?initialLettersByColor[letterConfig.color].selectedLetters:[] ,...letterConfig.selectedLetters]\n let setSelectedLetters= new Set(arraySelectedLetters)\n  arraySelectedLetters=Array.from(setSelectedLetters)\n  let arrayLetters =   [...initialLettersByColor[letterConfig.color] && initialLettersByColor[letterConfig.color].letters?initialLettersByColor[letterConfig.color].letters:[] ,...letterConfig.letters]\n let setLetters= new Set(arrayLetters)\n  arrayLetters=Array.from(setLetters)\n  initialLettersByColor[letterConfig.color] = {selectedLetters:arraySelectedLetters}\n \n})\n \n \n setAllSelectedLetters([...allLetters])\n setSelectedLettersByColor(initialLettersByColor)\n  transformToMainContainerLetterArrayProps(initialLettersByColor);\n setUniqueId(Date.now())\n}\n \n \n \n \nuseEffect(() => {\n     let transformed=[]\n   for(var k in initialLettersByColor) {\n \n       let lettersConfig = {letters:initialLettersByColor[k].selectedLetters,color:k,selectedLetters:[],blockedLetters:[],style:{display:'grid', gridTemplateColumns:'repeat(5,auto)',gridGap:'12px',margin:\"12px auto\",float:'left'}}\n       transformed.push(lettersConfig)\n}\n \nlocalStorage.setItem('Default', JSON.stringify({preset:allSelectedLettersByColor,transformed}))\n  choosePreset(localStorage.getItem('selectedPreset'))\n \n }, []);\n return <div style={style? style:{}}>\n     <div style={{ width:'100%', backgroundColor:'#cdf1fc',height:'90px'}}>\n <div style={{margin:'auto', width:'70%'}} >\n \n   <div style={{display:'inline-block', margin:'12px 0px', float:\"left\"}}>\n     <img src=\"https://omarbarbosahmh.github.io/blendingboardv3/assets/logo.png\" alt=\"logo\" width='280px'></img>\n     </div>\n     <div style={{display:'inline-block'}}>\n                <br></br>\n           <select name=\"preset\" value={selectedPreset} onChange={(e)=>choosePreset(e.target.value)}>\n             <option value={'Default'}>Default</option>\n             {presets.map(preset=><option value={preset}>{preset}</option>)}\n            </select>\n            <input type=\"text\" value={presetName} onChange={(e)=>setPresetName(e.target.value)} />\n           \n           <button onClick={savePreset}>Save as preset</button>\n           <button onClick={deletePreset}>Delete preset</button>\n \n          \n         </div>\n <div style={{float:'right',margin:'12px 0px',display:'inline-block',cursor:\"pointer\"}} onClick={()=>setSelectedScreen(\"MainContainer\")}>\n     <img src=\"https://omarbarbosahmh.github.io/blendingboard/assets/check.png\" alt=\" icon\" width=\"50px\"></img>\n     </div>\n \n     <div style={{clear:'both'}}>\n       </div>\n       </div></div>\n        \n        <div style={{textAlign:'center',fontWeight:'600',fontSize:\"80px\"}}>\n    \n     {/* {allSelectedLetters.flat(1).length} Selected */}\n   </div>\n  <div style={{ height:\"78vh\", overflowY:\"auto\", overflowX:\"hidden\",width:'100%',margin: '20px auto', display: \"flex\",justifyContent:\"center\"}}>\n {!reset && initialConfigs.map((initialConfig,index)=><SelectionBlock uniqueId={index} initialConfig={initialConfig} desSelectLetterByColor={desSelectLetterByColor} getSelectedLettersByColor={getSelectedLettersByColor} getSelectedAllOrNoneLettersByColor={(allOrNone)=>getSelectedAllOrNoneLettersByColor(allOrNone,index)} getAllSelectedLetters={(lettersArray)=>getAllSelectedLetters(lettersArray,index)}></SelectionBlock>)}\n </div>\n  \n  \n  \n </div>\n \n})\n \n \n\n","import MainContainer from \"./MainContainer\";\nimport {useState,useRef} from 'react'\nimport SelectionContainer from \"./SelectionContainer\";\nfunction App() {\n //document.body.style.zoom = \"80%\";\nlet [lettersConfig,setLettersConfig] = useState([])\n \nlet [selectedScreen,setSelectedScreen] = useState('MainContainer')\nconst childRef = useRef();\nlet choosePreset= (presset) =>{\n \nchildRef.current.choosePresetExternal(presset)\n}\n return <div  >\n      { selectedScreen==='MainContainer'&& <MainContainer setSelectedScreen={setSelectedScreen} selectedScreen={selectedScreen}   emitChoosePreset={choosePreset}   lettersConfig={lettersConfig}\n       >\n     </MainContainer>}\n \n    {selectedScreen ==='SelectionContainer' &&<SelectionContainer  ref={childRef}  setSelectedScreen={setSelectedScreen} selectedScreen={selectedScreen}  getTransformToMainContainerLetterArrayProps={setLettersConfig}\n       >\n     </SelectionContainer>}\n  \n  \n  \n </div>\n \n}\n \nexport default App;\n \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n \n \nReactDOM.render(\n <React.StrictMode>\n   <App />\n </React.StrictMode>,\n document.getElementById('root')\n);\n \n \n \n\n"],"sourceRoot":""}